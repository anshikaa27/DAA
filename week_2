//LAB 2.1
#include<iostream>
using namespace std;
int Binary_search(int A[],int l,int r,int x)
{
    if(r>=l)
    {
        int mid=(l+r)/2;
        if(A[mid]==x)
        {
        int ind = mid;
        int Count=1;
        int left=ind-1;
        int right=ind+1;
    while(left>l && A[left]==x)
    {
        left--;
         Count++;
    }
    while(right<r && A[right]==x)
    {
        right++;
        Count++;
    }
    cout<<x<<"-"<<Count<<endl;
    return 0;
    }
    else if(A[mid]>x)
    return Binary_search(A,l,mid-1,x);
    else
    return Binary_search(A,mid+1,r,x);
    }
    return -1;

}
int main()
{
    int T;
    cin>>T;
    for(int i=0;i<T;i++)
    {
        int n;
        cin>>n;
        int arr[n];
        for(int i=0;i<n;i++)
        {
            cin>>arr[i];
        }
        int num;
        cin>>num;

        int val;
       val=Binary_search(arr,0,n,num);
       if (val==-1)
        cout<<"series Not Found"<<endl;
    }
    return 0;

}

//LAB 2.2
#include<iostream>
using namespace std;
void Find_sum(int arr[],int n)
{
    int i,j,k;
    int vrr[3];
    int fl=0;
    for(i=0;i<n;i++)
    {
         int sum=0;
        for(j=i+1;j<n;j++)
        {
            k=j+1;
            while(k<n)
            {
            sum=arr[i]+arr[j];
            if(sum==arr[k])
            {
                fl=1;
               vrr[0]=i+1;
               vrr[1]=j+1;
               vrr[2]=k+1;
               break;
            }
            k++;
            }
        }
    }
    if(fl==0)
        cout<<"Sequence Not Found"<<endl;
    else
         cout<<vrr[0]<<" ,"<<vrr[1]<<" ,"<<vrr[2]<<endl;
}
int main()
{
    int T;
    cin>>T;
    for(int i=0;i<T;i++)
    {
        int n;
        cin>>n;
        int arr[n];
        for(int i=0;i<n;i++)
        {
            cin>>arr[i];
        }
        Find_sum(arr,n);
    }

}

//lab2.3
#include<iostream>
using namespace std;
void Find_sum(int arr[],int n,int val)
{
    int p=0;
    for(int i=0;i<n;i++)
    {
        for(int j=i+1;j<n;j++)
        {
            if(arr[i]>arr[j] && ((arr[i]-arr[j])==val))
            {
                p++;
            }
            else if(arr[i]<arr[j] && ((arr[j]-arr[i])==val))
            {
                p++;
            }
        }
    }
    cout<<p<<endl;
}
int main()
{
    int T;
    cin>>T;
    for(int i=0;i<T;i++)
    {
        int n;
        cin>>n;
        int arr[n];
        for(int i=0;i<n;i++)
        {
            cin>>arr[i];
        }
        int val;
        cin>>val;
        Find_sum(arr,n,val);
    }

}


